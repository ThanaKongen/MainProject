@page "/PrivateCustomer/{Id:int}"
@inject IPrivateCustomerService PrivateCustomerService
@using DanBase.Shared.CustomerModels.Command


<h3>Personlige indstillinger</h3>

@if (Loading == true)
{
    <i class="fa fa-circle-o-notch fa-spin myicons" aria-hidden="true"></i>
}

@if (Customer != null)
{
    <h3>@Customer.firstName @Customer.lastName</h3>
    <div class="form-group">
        <label>Company Id</label>
        <input class="form-control" type="text" id="CompanyId" @bind="@Customer.companyId" @onblur="Update" />
        <label>First name</label>
        <input class="form-control" type="text" id="FirstName" @bind="@Customer.firstName" @onblur="Update" />
        <label>Last name</label>
        <input class="form-control" type="text" id="LastName" @bind="@Customer.lastName" @onblur="Update" />
        <label>CPR</label>
        <input class="form-control" type="text" id="CPR" @bind="Customer.cpr" @onblur="Update" />
        <label>User name</label>
        <input class="form-control" type="text" id="UserName" @bind="Customer.username" @onblur="Update" />
        <label>Password</label>
        <input class="form-control" type="password" id="Password" @bind="Customer.password" @onblur="Update" />
        <label>Text</label>
        <input class="form-control" type="text" id="Text" @bind="Customer.text" @onblur="Update" />
        <label>Account</label>
        <input class="form-control" type="text" id="Account" @bind="Customer.accountNo" @onblur="Update" />
    </div>
}

@code {
    private bool Loading;

    [Parameter]
    public int Id { get; set; }

    private Models.PrivateCustomer.PrivateCustomerDetails Customer;

    protected override async Task OnParametersSetAsync()
    {
        Loading = true;

        Customer = await PrivateCustomerService.GetById(Id);

        Loading = false;
    }

    private void Update()
    {
        PrivateCustomerService.Update(Customer);
    }
}
